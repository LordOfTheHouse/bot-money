services:
    db:
        image: postgres:16
        container_name: expensebot-db
        environment:
            POSTGRES_DB: expensebot
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
        volumes:
            - pgdata_expensebot:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d expensebot"]
            interval: 5s
            timeout: 3s
            retries: 10

    app:
        build: .
        container_name: expensebot-app
        depends_on:
            db:
                condition: service_healthy
        environment:
            # СЕКРЕТЫ: задаются ТОЛЬКО через команду запуска
            TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
            TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME}
            SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/expensebot
            SPRING_DATASOURCE_USERNAME: postgres
            SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
            SPRING_JPA_HIBERNATE_DDL_AUTO: update
            # при желании можно пробросить TZ
            TZ: ${TZ:-Europe/Moscow}
        ports:
            - "8080:8080"
        restart: unless-stopped

volumes:
    pgdata_expensebot:
